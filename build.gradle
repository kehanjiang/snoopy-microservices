description = 'snoopy microservices system'

allprojects {
	group 'com.snoopy'
//	version '1.0.0-RC3'
	version '1.0.0-SNAPSHOT'
	apply from: "${rootProject.projectDir}/libraries.gradle"
}
subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'maven-publish'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	//依赖缓存时间
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}

	buildscript {
		repositories {
			mavenCentral()
			maven {
				url "https://plugins.gradle.org/m2/"
			}
		}
		dependencies {
			classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
			classpath "gradle.plugin.com.virgo47.gradle:ClasspathJar:1.0.0"
			classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.8"
		}
	}

	repositories {
		maven {
			url 'https://maven.aliyun.com/repository/public'
		}
		maven {
			credentials {
				username "${ALIYUN_NEXUS_USER}"
				password "${ALIYUN_NEXUS_PASSWORD}"
			}
			url 'https://packages.aliyun.com/maven/repository/2335505-release-mxJxew/'
		}
		maven {
			credentials {
				username "${ALIYUN_NEXUS_USER}"
				password "${ALIYUN_NEXUS_PASSWORD}"
			}
			url 'https://packages.aliyun.com/maven/repository/2335505-snapshot-AmYv1d/'
		}
	}

	// 上传source
	task sourcesJar(type: Jar) {
		from sourceSets.main.allJava
		classifier = 'sources'
	}

	publishing {
		publications {
			library(MavenPublication) {
				from components.java
				artifact sourcesJar
			}
		}
		repositories {
			maven {
				credentials {
					username "${ALIYUN_NEXUS_USER}"
					password "${ALIYUN_NEXUS_PASSWORD}"
				}
				if (project.version.endsWith('-SNAPSHOT')) {
					url "https://packages.aliyun.com/maven/repository/2335505-snapshot-AmYv1d/"
				} else {
					url "https://packages.aliyun.com/maven/repository/2335505-release-mxJxew/"
				}
			}
		}
	}
}